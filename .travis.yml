# Travis CI (MIT License) configuration file
# @link https://travis-ci.org/

# Use new container based environment
sudo: false

# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Declare versions of PHP to use. Use one decimal max.
matrix:
  include:
    # aliased to a recent 5.6.x version
    - php: '5.6'
      env: GTEPHPFIVEFOUR=1
    # Lowest currently possible in travis
    - php: '5.2'
      env: LTPHPFIVEFOUR=1

before_script:
    # Install CodeSniffer for WordPress Coding Standards checks.
    # 2.3.1 breaks PHP 5.2 on Travis due to use of Phar class.
    - git clone -b 2.3.0 --depth=1 https://github.com/squizlabs/PHP_CodeSniffer.git phpcs
    # Install WordPress Coding Standards.
    - git clone -b master --depth=1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git wpcs
    # Hop into CodeSniffer directory.
    - cd phpcs
    # Set install path for WordPress Coding Standards.
    # @link https://github.com/squizlabs/PHP_CodeSniffer/blob/4237c2fc98cc838730b76ee9cee316f99286a2a7/CodeSniffer.php#L1941
    - scripts/phpcs --config-set installed_paths ../wpcs
    # Hop into project dir.
    - cd $TRAVIS_BUILD_DIR
    # After CodeSniffer install you should refresh your path.
    - phpenv rehash

# Run test script commands.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
    # Search for PHP syntax errors. Ignore the phpcs and wpcs directories.
    - if [[ "$GTEPHPFIVEFOUR" == "1" ]]; then find -L . -path "./*pcs" -prune -o -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l; fi
    - if [[ "$LTPHPFIVEFOUR" == "1" ]]; then find -L . \( -path "./*pcs" -o -name "*php54.php" \) -prune -o -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l; fi
    # WordPress Coding Standards
    # @link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
    # @link http://pear.php.net/package/PHP_CodeSniffer/
    # -p flag: Show progress of the run.
    # -s flag: Show sniff codes in all reports.
    # -v flag: Print verbose output.
    # -n flag: Do not print warnings (shortcut for --warning-severity=0)
    # --standard: Use WordPress as the standard.
    # --extensions: Only sniff PHP files.
    - $TRAVIS_BUILD_DIR/phpcs/scripts/phpcs -p -s -v -n . --standard=./bin/codesniffer.xml --extensions=php
